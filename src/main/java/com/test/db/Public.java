/*
 * This file is generated by jOOQ.
 */
package com.test.db;


import com.test.db.tables.MergePerson;
import com.test.db.tables.Person;
import com.test.db.tables.records.MergePersonRecord;
import com.test.db.udt.Dressing;
import com.test.db.udt.records.DressingRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;
import org.jooq.Table;
import org.jooq.UDT;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.merge_person</code>.
     */
    public final MergePerson MERGE_PERSON = MergePerson.MERGE_PERSON;

    /**
     * Call <code>public.merge_person</code>.
     */
    public static Result<MergePersonRecord> MERGE_PERSON(
          Configuration configuration
        , DressingRecord[] arr
    ) {
        return configuration.dsl().selectFrom(com.test.db.tables.MergePerson.MERGE_PERSON.call(
              arr
        )).fetch();
    }

    /**
     * Get <code>public.merge_person</code> as a table.
     */
    public static MergePerson MERGE_PERSON(
          DressingRecord[] arr
    ) {
        return com.test.db.tables.MergePerson.MERGE_PERSON.call(
            arr
        );
    }

    /**
     * Get <code>public.merge_person</code> as a table.
     */
    public static MergePerson MERGE_PERSON(
          Field<DressingRecord[]> arr
    ) {
        return com.test.db.tables.MergePerson.MERGE_PERSON.call(
            arr
        );
    }

    /**
     * The table <code>public.person</code>.
     */
    public final Person PERSON = Person.PERSON;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            MergePerson.MERGE_PERSON,
            Person.PERSON
        );
    }

    @Override
    public final List<UDT<?>> getUDTs() {
        return Arrays.asList(
            Dressing.DRESSING
        );
    }
}
